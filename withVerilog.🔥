from python import Python

alias note: String = "\\n \\\\textit{Note: See the chapter at the end of the notes for all content on Verilog (\\\\hyperref[Verilog]{Verilog chapter}).}\n"
alias filename: String = "FDS.tex"
alias modified_file: String = "modified_FDS.tex"


fn parse_latex_sections() raises:
    var content:String
    var modified_content:String
    var re = Python.import_module("re")

    with open(filename, 'r') as file:
        content = file.read()

    # Regex to match all sections with 'Verilog' in the title and append the note immediately after the section title
    var updated_content:String = re.sub(r'(\\section\{[^}]*Verilog[^}]*\})', r'\1' + note, content)

    # Preparing a Verilog chapter by extracting and cleaning up Verilog content

    var firstpage:String = "\\label{Verilog}\\begin{center}\\vspace*{1cm}\\begin{center}\\textbf{Concatenation of all Verilog Content}\\end{center}\\text{You'll find links to this chapter at the beginning of sections about Verilog.} \\end{center}\\newpage\n"
    var verilog_chapter:String = "\n\\chapter{All of Verilog}\n" + firstpage + "\n"
    var verilog_sections = re.findall(r'(\\section\{[^}]*Verilog[^}]*\})(.*?)(?=\\section|$)', content, flags=re.DOTALL)

    for verilog_section in verilog_sections:
        var clean_section:String = re.sub(r'\\chapter\{[^}]*\}|\\newpage', '', verilog_section[0] + verilog_section[1])
        verilog_chapter += clean_section + "\n"

    var end_document_pos:Int = updated_content.rfind('\\end{document}')
    if end_document_pos != -1:
        modified_content = updated_content[:end_document_pos] + verilog_chapter + updated_content[end_document_pos:]
    else:
        modified_content = updated_content + verilog_chapter

    with open(modified_file, 'w') as file:
        file.write(modified_content)


fn main() raises:
    parse_latex_sections()
    Python.add_to_path(".") # Add the current directory to the Python path
    var compile = Python.import_module("compile")
    
    compile.compile_latex_to_pdf(modified_file)

